var logger = require('./logger');
module.exports = {
    hasErrors: false,
    validate: function(packageJSON) {
        this._validatePackageProperty('name', packageJSON);
        this._validatePackageProperty('version', packageJSON);
        this._validatePackageProperty('description', packageJSON);
        this._validatePackageProperty('main', packageJSON);
        // TODO check the main file exists

        this._validatePackageProperty('widgetConfig', packageJSON);
        if (packageJSON.widgetConfig) {
            this._validateWidgetConfigProperty('thumbnail', packageJSON.widgetConfig);

            // TODO - check the thumbnail file exists

            // check the preferences
            for (var i = 0; i < packageJSON.widgetConfig.preferences.length; i++) {
                var preference = packageJSON.widgetConfig.preferences[i];
                if (!preference.type) {
                    this.hasErrors = true;
                    logger.error('type is not set for preference ' + preference.name);
                } else {
                    // check it is a valid type
                    var validTypes = ['string', 'int', 'boolean', 'float', 'datetime', 'colour', 'list'];
                    if (validTypes.indexOf(preference.type) == -1) {
                        this.hasErrors = true;
                        logger.error('type is not a valid value for preference ' + preference.name);
                    }

                    // check the validators to ensure 
                    // only valid validators are used for the type
                    // and the values of the validator are valid
                }
            }
        }
    },
    _validatePackageProperty: function(name, object) {
        if (!object[name]) {
            this.hasErrors = true;
            logger.error(name + ' is not set in package.json');
        }
    },
    _validateWidgetConfigProperty: function(name, object) {
        if (!object[name]) {
            this.hasErrors = true;
            logger.error(name + ' is not set in widgetConfig in package.json');
        }
    }

};